name: Deploy Amplo AutoML

on:
  release:
    types: [created]

env:
  GITHUB_VERSION: ${{ github.event.release.tag_name }}
  IMAGE_NAME: automl

jobs:
  build-and-deploy-pypi:
    name: Build and publish the Python wheel to PyPi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Add version identifier
        run: echo "__version__ = '$GITHUB_VERSION'" >> amplo/__init__.py

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

  build-and-deploy-docker:
    name: Build and deploy Docker image to Container registry
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Add version identifier"
        run: echo "__version__ = '$GITHUB_VERSION'" >> amplo/__init__.py

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Login to ACR"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Build and push image"
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$GITHUB_VERSION
          docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$GITHUB_VERSION ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }} --all-tags
